import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import F
import asyncio

API_TOKEN = '7779824271:AAHJ01L3be-L55ymfBc4STqtMB0d27q-U1U'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ü—Ä–∏–º–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä
games_catalog = {
    "Catan": {"price": 1500, "description": "–ù–∞—Å—Ç–æ–ª—å–Ω–∞—è –∏–≥—Ä–∞ –æ –∑–∞—Å–µ–ª–µ–Ω–∏–∏ –æ—Å—Ç—Ä–æ–≤–∞ –ö–∞—Ç–∞–Ω."},
    "Monopoly": {"price": 1200, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –ø—Ä–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏."},
    "Carcassonne": {"price": 1800, "description": "–°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–∞—è –∏–≥—Ä–∞ –æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –≥–æ—Ä–æ–¥–æ–≤ –∏ –¥–æ—Ä–æ–≥."}
}

# –ö–æ—Ä–∑–∏–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cart = {}


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–≥—Ä –∏ –∫–Ω–æ–ø–∫–æ–π "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
def get_main_menu_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=game, callback_data=f"select_{game}") for game in games_catalog.keys()],
            [InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ", callback_data="store_info")]
        ]
    )
    return keyboard


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
@dp.message(F.text == "/start")
async def send_welcome(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:",
                         reply_markup=get_main_menu_keyboard())


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
def get_add_to_cart_button(game_name):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{game_name}")]
        ]
    )
    return keyboard


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∏ –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–µ
@dp.callback_query(lambda callback: callback.data.startswith("select_"))
async def handle_game_selection(callback_query: types.CallbackQuery):
    game_name = callback_query.data.split("_")[1]  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–∑ callback_data
    game_info = games_catalog.get(game_name)

    if game_info:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–≥—Ä–µ
        game_details = (f"üïπ <b>{game_name}</b>\n"
                        f"üíµ –¶–µ–Ω–∞: {game_info['price']} —Ä—É–±.\n"
                        f"üìú –û–ø–∏—Å–∞–Ω–∏–µ: {game_info['description']}\n")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await callback_query.message.answer(game_details, parse_mode="HTML",
                                            reply_markup=get_add_to_cart_button(game_name))

        await callback_query.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º alert
    else:
        await callback_query.answer(f"–ò–≥—Ä–∞ {game_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
@dp.callback_query(lambda callback: callback.data.startswith("add_"))
async def handle_add_to_cart(callback_query: types.CallbackQuery):
    game_name = callback_query.data.split("_")[1]  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–∑ callback_data

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä—É –≤ –∫–æ—Ä–∑–∏–Ω—É
    if callback_query.from_user.id not in cart:
        cart[callback_query.from_user.id] = []
    cart[callback_query.from_user.id].append(game_name)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
    await callback_query.answer(f"–ò–≥—Ä–∞ {game_name} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É", show_alert=True)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ"
@dp.callback_query(lambda callback: callback.data == "store_info")
async def handle_store_info(callback_query: types.CallbackQuery):
    # –¢–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞–≥–∞–∑–∏–Ω–µ –∏ –¥–æ—Å—Ç–∞–≤–∫–µ
    store_info = (
        "üè¨ <b>–ú–∞–≥–∞–∑–∏–Ω –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä</b>\n"
        "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä.\n\n"
        "üì¶ <b>–°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏:</b>\n"
        "1. –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ - 300 —Ä—É–±.\n"
        "2. –°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –Ω–∞—à–µ–≥–æ –æ—Ñ–∏—Å–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
        "3. –ü–æ—á—Ç–æ–≤–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ - 500 —Ä—É–±.\n\n"
        "üí≥ <b>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>\n"
        "- –ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n"
        "- –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞\n"
        "- –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback_query.message.answer(store_info, parse_mode="HTML")
    await callback_query.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º alert


# –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã
@dp.message(F.text == "–ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart(message: types.Message):
    user_cart = cart.get(message.from_user.id, [])
    if not user_cart:
        await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
    else:
        cart_text = "–í–∞—à–∏ –∏–≥—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ:\n\n"
        total_price = 0
        for game in user_cart:
            game_info = games_catalog[game]
            cart_text += f"üïπ {game} - {game_info['price']} —Ä—É–±.\n"
            total_price += game_info['price']
        cart_text += f"\n–û–±—â–∞—è —Å—É–º–º–∞: {total_price} —Ä—É–±."
        await message.answer(cart_text)


# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
@dp.message(F.text == "/checkout")
async def checkout(message: types.Message):
    user_cart = cart.get(message.from_user.id, [])
    if not user_cart:
        await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
    else:
        total_price = sum(games_catalog[game]['price'] for game in user_cart)
        await message.answer(
            f"–í—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É {total_price} —Ä—É–±.\n–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
